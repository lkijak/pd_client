{"version":3,"sources":["views/helpers.js","views/start.js","views/lifeChart.js","views/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["API_DOMAIN","clientId","user","JSON","parse","localStorage","getItem","getUsername","username","profileObj","email","slice","indexOf","reportSuccess","response","window","location","href","setItem","stringify","userName","userEmail","axios","post","then","console","log","catch","error","registerUser","get","params","getUserData","reportError","reportLogout","clear","Start","className","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","React","Component","LifeGraph","chartRef","createRef","setTimeout","myChartRef","current","getContext","Chart","Legend","prototype","afterFit","this","height","type","data","labels","datasets","Math","floor","random","backgroundColor","options","responsive","maintainAspectRatio","scale","angleLines","display","ticks","min","max","precision","z","gridLines","drawOnChartArea","lineWidth","legend","fontColor","tooltips","enabled","animation","tension","duration","easing","from","to","loop","width","id","ref","Dashboard","onLogoutSuccess","render","renderProps","onClick","disabled","src","imageUrl","name","style","margin","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fc459f7d.chunk.js","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react';\n\n/**\n * Libraries\n */\nimport axios from 'axios';\n\n/**\n * backend client variables\n */\nexport const API_DOMAIN = `https://smart-evolution.azurewebsites.net`;\nexport const clientId = `850157239961-g16l5ifn3btccslaogvpicf7umrbrubd.apps.googleusercontent.com`;\n\nexport const user = JSON.parse(localStorage.getItem('user'));\n\n// define username\nexport const getUsername = () => {\n  let user = JSON.parse(localStorage.getItem('user'));\n  let username = user.profileObj.email;\n    username = username.slice(0, username.indexOf('@'));\n  return username\n}\n\n// Check if user exist in backend\nexport const getUserData = () => {\n  let username = getUsername();\n\n  axios.get(`${API_DOMAIN}/User`, {\n    params: {\n      userName: username\n    }\n  })\n  .then((response) => {\n    console.log(response);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n}\n\n// Sends Google data to backend\nexport const registerUser = () => {\n  let userName = getUsername();\n  let user = JSON.parse(localStorage.getItem('user'));\n  let userEmail = user.profileObj.email;\n\n  axios.post(`${API_DOMAIN}/User`, \n  {\n    userName: userName,\n    email: userEmail\n  },\n  {\n    'Content-Type': 'text/plain'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\n\n/**\n * Google login functions\n */\nexport const reportSuccess = response => {\n  if(window.location.href !== '/dashboard/'){window.location.href = '/dashboard/'}\n  localStorage.setItem('user', JSON.stringify(response));\n  registerUser();\n  getUserData();\n}\n\nexport const reportError = response => {\n  console.error(response); // eslint-disable-line\n  if(window.location.href !== '/'){window.location.href = '/'}\n}\n\nexport const reportLoading = () => {\n  console.log('loading') // eslint-disable-line\n}\n\nexport const reportLogout = () => {\n  localStorage.clear('user');\n  if(window.location.href !== '/'){window.location.href = '/'}\n}","import React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport { clientId, reportSuccess, reportError } from './helpers';\n\nclass Start extends React.Component {\n    render () {\n        return (            \n            <section className=\"o-section o-section--full c-start o-flex o-flex--centered o-flex--grids o-flex--wrap u-padding-none\">\n                <div className=\"c-start__image o-flex__item u-flex-7/12\"></div>\n                <div className=\"c-start__container o-flex__item u-flex-5/12 o-flex o-flex--centered\">\n                    {/* Top Right Menu */}\n                    <div className=\"c-menu--top\">\n                    <div className=\"c-heading c-heading--h3 u-font-color--3 u-text--bold u-margin-none\">SMART Evolution</div>\n                    </div>\n\n                    {/* Floating Content */}\n                    <div className=\"o-wrapper c-start__content u-bg-color--1\">\n                        <p className=\"c-heading c-heading--h0 u-margin-bottom-huge u-font-color--1 u-text--thin\">\n                            Przemień marzenia w plan\n                        </p>\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase\">\n                            Wykreuj rzeczywistość dla siebie\n                        </p>\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase u-margin-bottom-none\">\n                            i ciesz się życiem, jakiego chciałeś\n                        </p>\n                    \n                        {/* Log-in Buttons */}\n                        <div className=\"c-start__buttons u-position-relative\">\n                            <GoogleLogin\n                                clientId={clientId}\n                                buttonText=\"Zaloguj z Google\"\n                                onSuccess={reportSuccess}\n                                onFailure={reportError}\n                                cookiePolicy={'single_host_origin'}\n                                isSignedIn={true}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Start;","import React, { Component } from 'react';\nimport Chart from \"chart.js\";\n\nclass LifeGraph extends Component {\n    chartRef = React.createRef();\n    \n    componentDidMount() {\n        setTimeout(() => {\n            const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n            Chart.Legend.prototype.afterFit = function() {\n                this.height = this.height + 30;\n            };\n        \n            new Chart(myChartRef, {\n                type: 'polarArea',\n                data: {\n                    labels: ['Rozwój osobisty', 'Kariera', 'Finanse', 'Otoczenie', 'Partner', 'Rodzina', 'Wypoczynek', 'Zdrowie'],\n                    datasets: [{\n                        data: [\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                            Math.floor(Math.random() * 5) + 1,\n                        ],\n                        backgroundColor: ['rgba(255,61,0 ,1)', 'rgba(255,171,0 ,1)', 'rgba(174,234,0 ,1)', 'rgba(0,200,83 ,1)', 'rgba(0,184,212 ,1)', 'rgba(41,98,255 ,1)', 'rgba(98,0,234 ,1)', 'rgba(213,0,0 ,1)']\n                    }]\n                },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scale: {\n                        angleLines: {\n                            display: false\n                        },\n                        ticks: {\n                            min: 0,\n                            max: 5,\n                            precision: 0,\n                            z: 1,\n                            display: false,\n                        },\n                        gridLines: {\n                            drawOnChartArea: true,\n                            lineWidth: 2,\n                        },\n                    },\n                    legend: {\n                        display: true,\n                        labels: {\n                            fontColor: 'black'\n                        }\n                    },\n                    tooltips: {\n                        enabled: true\n                    },\n                    animation: {\n                        tension: {\n                            duration: 1000,\n                            easing: 'easeOutCubic',\n                            from: 1,\n                            to: 0,\n                            loop: true\n                        }\n                    },\n                }\n            }); \n        }, 650);\n    }\n    render() {\n        return (\n            <div className=\"c-chart--life-graph\">\n                <canvas width=\"350\" height=\"400\"\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n\nexport default LifeGraph;","import React from \"react\";\nimport LifeGraph from './lifeChart';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId, reportLogout, user } from './helpers';\n\n\nclass Dashboard extends React.Component {\n    render () {\n        return (            \n            <section className=\"c-dashboard o-flex o-flex--wrap o-flex--space-between u-padding-none u-bg-color--6 o-flex--lock-top\">\n                <div className=\"u-flex-12/12 u-padding-big u-padding-horizontal-great u-text--right u-text--smallest u-bg-color--6 u-font-color--3\">\n                    <a className=\"o-link u-margin-right-great\">RODO</a>\n                    <a className=\"o-link u-margin-right-great\">Polityka prywatności</a>\n                    <GoogleLogout\n                        clientId={clientId}\n                        buttonText=\"Wyloguj\"\n                        onLogoutSuccess={reportLogout}\n                        render={renderProps => (\n                            <a className=\"o-link\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Wyloguj</a>\n                        )}\n                    >\n                    </GoogleLogout>\n                </div>\n                <div className=\"u-flex-3/12 u-padding-horizontal-big\">\n                    <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\n                        <h3 className=\"u-text--center u-margin-bottom-tiny\">Twoje życiowe cele</h3>\n                        <p className=\"u-text--center u-text--smaller\">Przeglądaj je codziennie, aby pamiętać<br></br>do czego dążysz i jak to osiągnąć</p>\n                        <ul className=\"c-list u-flex-12/12 u-margin-bottom-none\">\n                            <li className=\"c-list__item\">Sprzedawać odzież własnej marki</li>\n                            <li className=\"c-list__item\">Osiedlić się w Tajlandii</li>\n                            <li className=\"c-list__item\">Władać płynnie pięcioma językami</li>\n                            <li className=\"c-list__item\">Mieć tytuł mistrza szachowego</li>\n                            <li className=\"c-list__item\">Zbudować dom</li>\n                            <li className=\"c-list__item\">Założyć rodzinę z dwójką dzieci</li>\n                            <li className=\"c-list__item\">Zwiedzić cały świat</li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"u-flex-6/12 o-flex o-flex--centered-h\">\n                    <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\n                        <h3 className=\"u-text--left u-margin-bottom-tiny\">Plan realizacji: Sprzedawać odzież własnej marki</h3>\n                        <p className=\"u-text--left\">Twój plan to gwarancja osiągnięcia zamierzonego celu. Przemyśl realizację zgodnie z metodologią SMART, następnie wypisz wszystkie kroki i zacznij działać.</p>\n                        <ul className=\"c-list u-flex-12/12 u-margin-bottom-none\">\n                            <li className=\"c-list__item\">Nawiązać znajomość z projektantem odzieży</li>\n                            <li className=\"c-list__item\">Nawiązać znajomość z dystrybutorem</li>\n                            <li className=\"c-list__item\">Wyszukać w internecie fabryki odzieży</li>\n                            <li className=\"c-list__item\">Wykonać telefon dla zorientowania w kosztach produkcji</li>\n                            <li className=\"c-list__item\">Kolejny krok</li>\n                            <li className=\"c-list__item\">Kolejny krok</li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"u-flex-3/12 u-padding-horizontal-big\">\n                    <div className=\"c-card u-padding-big o-flex o-flex--centered-v u-margin-bottom-big\">\n                        <img className=\"c-nav__picture u-margin-right\" src={user.profileObj.imageUrl}></img>\n                        <strong>{user.profileObj.name}</strong>\n                    </div>\n\n                    <div className=\"c-card c-card--info c-card--white u-padding-big o-flex o-flex o-flex--wrap\">\n                        <h3 className=\"o-flex u-text--left u-margin-bottom-tiny\">Koło życia</h3>\n                        <div className=\"o-flex\" style={{margin: '30px auto'}}>\n                            <LifeGraph/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport './scss/main.css';\nimport { reportSuccess, reportError, reportLogout, reportLoading } from \"./views/helpers\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// views\nimport Start from './views/start';\nimport Dashboard from './views/dashboard';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Start />\n            </Route>\n            <Route exact path=\"/dashboard/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </Router>\n    </div> \n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}