{"version":3,"sources":["views/helpers.js","views/start.js","views/lifeChart.js","views/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["clientId","reportSuccess","response","console","info","window","location","href","reportError","error","reportLogout","Start","className","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","React","Component","LifeGraph","chartRef","createRef","setTimeout","myChartRef","current","getContext","Chart","Legend","prototype","afterFit","this","height","type","data","labels","datasets","Math","floor","random","backgroundColor","options","responsive","maintainAspectRatio","scale","angleLines","display","ticks","min","max","precision","z","gridLines","drawOnChartArea","lineWidth","legend","fontColor","tooltips","enabled","animation","tension","duration","easing","from","to","loop","width","id","ref","Dashboard","onLogoutSuccess","render","renderProps","onClick","disabled","src","style","margin","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kOAsBaA,G,qBADc,UADJ,4CACI,sBACH,4EAEXC,EAAgB,SAAAC,GAC3BC,QAAQC,KAAKF,GACc,eAAxBG,OAAOC,SAASC,OAAuBF,OAAOC,SAASC,KAAO,gBAGtDC,EAAc,SAAAN,GACzBC,QAAQM,MAAMP,GACa,KAAxBG,OAAOC,SAASC,OAAaF,OAAOC,SAASC,KAAO,MAO5CG,EAAe,WAC1BP,QAAQC,KAAK,W,uDCMAO,E,uKAvCP,OACI,6BAASC,UAAU,uGACf,yBAAKA,UAAU,4CACf,yBAAKA,UAAU,uEAEX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,sEAAf,oBAIA,yBAAKA,UAAU,4CACX,uBAAGA,UAAU,6EAAb,iCAGA,uBAAGA,UAAU,4DAAb,8CAGA,uBAAGA,UAAU,iFAAb,4DAKA,yBAAKA,UAAU,wCACX,kBAAC,cAAD,CACIZ,SAAUA,EACVa,WAAW,mBACXC,UAAWb,EACXc,UAAWP,EACXQ,aAAc,qBACdC,YAAY,Y,GA/BxBC,IAAMC,W,iBCiFXC,E,4MAjFXC,SAAWH,IAAMI,Y,kEAEI,IAAD,OAChBC,YAAW,WACP,IAAMC,EAAa,EAAKH,SAASI,QAAQC,WAAW,MAEpDC,IAAMC,OAAOC,UAAUC,SAAW,WAC9BC,KAAKC,OAASD,KAAKC,OAAS,IAGhC,IAAIL,IAAMH,EAAY,CAClBS,KAAM,YACNC,KAAM,CACFC,OAAQ,CAAC,qBAAmB,UAAW,UAAW,YAAa,UAAW,UAAW,aAAc,WACnGC,SAAU,CAAC,CACPF,KAAM,CACFG,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAChCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAEpCC,gBAAiB,CAAC,oBAAqB,qBAAsB,qBAAsB,oBAAqB,qBAAsB,qBAAsB,oBAAqB,uBAGjLC,QAAS,CACLC,YAAY,EACZC,qBAAqB,EACrBC,MAAO,CACHC,WAAY,CACRC,SAAS,GAEbC,MAAO,CACHC,IAAK,EACLC,IAAK,EACLC,UAAW,EACXC,EAAG,EACHL,SAAS,GAEbM,UAAW,CACPC,iBAAiB,EACjBC,UAAW,IAGnBC,OAAQ,CACJT,SAAS,EACTX,OAAQ,CACJqB,UAAW,UAGnBC,SAAU,CACNC,SAAS,GAEbC,UAAW,CACPC,QAAS,CACLC,SAAU,IACVC,OAAQ,eACRC,KAAM,EACNC,GAAI,EACJC,MAAM,SAKvB,O,+BAGH,OACI,yBAAKrD,UAAU,uBACX,4BAAQsD,MAAM,MAAMlC,OAAO,MACvBmC,GAAG,UACHC,IAAKrC,KAAKV,gB,GA3ENF,aCkETkD,E,uKA9DP,OACI,6BAASzD,UAAU,uGACf,yBAAKA,UAAU,sHACX,uBAAGA,UAAU,+BAAb,QACA,uBAAGA,UAAU,+BAAb,6BACA,kBAAC,eAAD,CACIZ,SAAUA,EACVa,WAAW,UACXyD,gBAAiB5D,EACjB6D,OAAQ,SAAAC,GAAW,OACf,uBAAG5D,UAAU,SAAS6D,QAASD,EAAYC,QAASC,SAAUF,EAAYE,UAA1E,eAKZ,yBAAK9D,UAAU,wCACX,yBAAKA,UAAU,8DACX,wBAAIA,UAAU,uCAAd,2BACA,uBAAGA,UAAU,kCAAb,wDAAoF,6BAApF,8DACA,wBAAIA,UAAU,4CACV,wBAAIA,UAAU,gBAAd,kDACA,wBAAIA,UAAU,gBAAd,sCACA,wBAAIA,UAAU,gBAAd,6DACA,wBAAIA,UAAU,gBAAd,2CACA,wBAAIA,UAAU,gBAAd,qBACA,wBAAIA,UAAU,gBAAd,+DACA,wBAAIA,UAAU,gBAAd,yCAIZ,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,8DACX,wBAAIA,UAAU,qCAAd,mEACA,uBAAGA,UAAU,gBAAb,yMACA,wBAAIA,UAAU,4CACV,wBAAIA,UAAU,gBAAd,sEACA,wBAAIA,UAAU,gBAAd,0DACA,wBAAIA,UAAU,gBAAd,mDACA,wBAAIA,UAAU,gBAAd,+DACA,wBAAIA,UAAU,gBAAd,gBACA,wBAAIA,UAAU,gBAAd,mBAIZ,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,gCAAgC+D,IAAK,MACpD,gCAAS,MAGb,yBAAK/D,UAAU,8EACX,wBAAIA,UAAU,4CAAd,wBACA,yBAAKA,UAAU,SAASgE,MAAO,CAACC,OAAQ,cAChC,kBAAC,EAAD,c,GAvDR3D,IAAMC,WC2Bf2D,EAlBH,WACV,OACE,yBAAKlE,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAChB,kBAAC,EAAD,WCXQC,QACW,cAA7B5E,OAAOC,SAAS4E,UAEe,UAA7B7E,OAAOC,SAAS4E,UAEhB7E,OAAOC,SAAS4E,SAASC,MACvB,2DCbNC,IAASb,OACP,kBAAC,IAAMc,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArF,GACLN,QAAQM,MAAMA,EAAMsF,c","file":"static/js/main.0a8c5720.chunk.js","sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\n/**\r\n * Libraries\r\n */\r\nimport axios from 'axios';\r\n\r\n/**\r\n * backend client variables\r\n */\r\nexport const API_DOMAIN = `https://smart-evolution.azurewebsites.net`;\r\nexport const googleLoginURL = `${API_DOMAIN}/Login/GoogleLogin`;\r\nexport const clientId = '850157239961-g16l5ifn3btccslaogvpicf7umrbrubd.apps.googleusercontent.com';\r\n\r\nexport const reportSuccess = response => {\r\n  console.info(response); // eslint-disable-line\r\n  if(window.location.href != '/dashboard/'){window.location.href = '/dashboard/'}\r\n}\r\n\r\nexport const reportError = response => {\r\n  console.error(response); // eslint-disable-line\r\n  if(window.location.href != '/'){window.location.href = '/'}\r\n}\r\n\r\nexport const reportLoading = () => {\r\n  console.log('loading') // eslint-disable-line\r\n}\r\n\r\nexport const reportLogout = () => {\r\n  console.info('logout') // eslint-disable-line\r\n}\r\n","import React from \"react\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { responseGoogle, clientId, reportSuccess, reportError } from './helpers';\r\n\r\nclass Start extends React.Component {\r\n    render () {\r\n        return (            \r\n            <section className=\"o-section o-section--full c-start o-flex o-flex--centered o-flex--grids o-flex--wrap u-padding-none\">\r\n                <div className=\"c-start__image o-flex__item u-flex-7/12\"></div>\r\n                <div className=\"c-start__container o-flex__item u-flex-5/12 o-flex o-flex--centered\">\r\n                    {/* Top Right Menu */}\r\n                    <div className=\"c-menu--top\">\r\n                    <div className=\"c-heading c-heading--h3 u-font-color--3 u-text--bold u-margin-none\">SMART Evolution</div>\r\n                    </div>\r\n\r\n                    {/* Floating Content */}\r\n                    <div className=\"o-wrapper c-start__content u-bg-color--1\">\r\n                        <p className=\"c-heading c-heading--h0 u-margin-bottom-huge u-font-color--1 u-text--thin\">\r\n                            Przemień marzenia w plan\r\n                        </p>\r\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase\">\r\n                            Wykreuj rzeczywistość dla siebie\r\n                        </p>\r\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase u-margin-bottom-none\">\r\n                            i ciesz się życiem, jakiego chciałeś\r\n                        </p>\r\n                    \r\n                        {/* Log-in Buttons */}\r\n                        <div className=\"c-start__buttons u-position-relative\">\r\n                            <GoogleLogin\r\n                                clientId={clientId}\r\n                                buttonText=\"Zaloguj z Google\"\r\n                                onSuccess={reportSuccess}\r\n                                onFailure={reportError}\r\n                                cookiePolicy={'single_host_origin'}\r\n                                isSignedIn={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Start;","import React, { Component } from 'react';\r\nimport Chart from \"chart.js\";\r\n\r\nclass LifeGraph extends Component {\r\n    chartRef = React.createRef();\r\n    \r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n\r\n            Chart.Legend.prototype.afterFit = function() {\r\n                this.height = this.height + 30;\r\n            };\r\n        \r\n            new Chart(myChartRef, {\r\n                type: 'polarArea',\r\n                data: {\r\n                    labels: ['Rozwój osobisty', 'Kariera', 'Finanse', 'Otoczenie', 'Partner', 'Rodzina', 'Wypoczynek', 'Zdrowie'],\r\n                    datasets: [{\r\n                        data: [\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                            Math.floor(Math.random() * 5) + 1,\r\n                        ],\r\n                        backgroundColor: ['rgba(255,61,0 ,1)', 'rgba(255,171,0 ,1)', 'rgba(174,234,0 ,1)', 'rgba(0,200,83 ,1)', 'rgba(0,184,212 ,1)', 'rgba(41,98,255 ,1)', 'rgba(98,0,234 ,1)', 'rgba(213,0,0 ,1)']\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scale: {\r\n                        angleLines: {\r\n                            display: false\r\n                        },\r\n                        ticks: {\r\n                            min: 0,\r\n                            max: 5,\r\n                            precision: 0,\r\n                            z: 1,\r\n                            display: false,\r\n                        },\r\n                        gridLines: {\r\n                            drawOnChartArea: true,\r\n                            lineWidth: 2,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        display: true,\r\n                        labels: {\r\n                            fontColor: 'black'\r\n                        }\r\n                    },\r\n                    tooltips: {\r\n                        enabled: true\r\n                    },\r\n                    animation: {\r\n                        tension: {\r\n                            duration: 1000,\r\n                            easing: 'easeOutCubic',\r\n                            from: 1,\r\n                            to: 0,\r\n                            loop: true\r\n                        }\r\n                    },\r\n                }\r\n            }); \r\n        }, 650);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"c-chart--life-graph\">\r\n                <canvas width=\"350\" height=\"400\"\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LifeGraph;","import React from \"react\";\r\nimport LifeGraph from './lifeChart';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { clientId, reportLogout } from './helpers';\r\n\r\nclass Dashboard extends React.Component {\r\n    render () {\r\n        return (            \r\n            <section className=\"c-dashboard o-flex o-flex--wrap o-flex--space-between u-padding-none u-bg-color--6 o-flex--lock-top\">\r\n                <div className=\"u-flex-12/12 u-padding-big u-padding-horizontal-great u-text--right u-text--smallest u-bg-color--6 u-font-color--3\">\r\n                    <a className=\"o-link u-margin-right-great\">RODO</a>\r\n                    <a className=\"o-link u-margin-right-great\">Polityka prywatności</a>\r\n                    <GoogleLogout\r\n                        clientId={clientId}\r\n                        buttonText=\"Wyloguj\"\r\n                        onLogoutSuccess={reportLogout}\r\n                        render={renderProps => (\r\n                            <a className=\"o-link\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Wyloguj</a>\r\n                        )}\r\n                    >\r\n                    </GoogleLogout>\r\n                </div>\r\n                <div className=\"u-flex-3/12 u-padding-horizontal-big\">\r\n                    <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\r\n                        <h3 className=\"u-text--center u-margin-bottom-tiny\">Twoje życiowe cele</h3>\r\n                        <p className=\"u-text--center u-text--smaller\">Przeglądaj je codziennie, aby pamiętać<br></br>do czego dążysz i jak to osiągnąć</p>\r\n                        <ul className=\"c-list u-flex-12/12 u-margin-bottom-none\">\r\n                            <li className=\"c-list__item\">Sprzedawać odzież własnej marki</li>\r\n                            <li className=\"c-list__item\">Osiedlić się w Tajlandii</li>\r\n                            <li className=\"c-list__item\">Władać płynnie pięcioma językami</li>\r\n                            <li className=\"c-list__item\">Mieć tytuł mistrza szachowego</li>\r\n                            <li className=\"c-list__item\">Zbudować dom</li>\r\n                            <li className=\"c-list__item\">Założyć rodzinę z dwójką dzieci</li>\r\n                            <li className=\"c-list__item\">Zwiedzić cały świat</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"u-flex-6/12 o-flex o-flex--centered-h\">\r\n                    <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\r\n                        <h3 className=\"u-text--left u-margin-bottom-tiny\">Plan realizacji: Sprzedawać odzież własnej marki</h3>\r\n                        <p className=\"u-text--left\">Twój plan to gwarancja osiągnięcia zamierzonego celu. Przemyśl realizację zgodnie z metodologią SMART, następnie wypisz wszystkie kroki i zacznij działać.</p>\r\n                        <ul className=\"c-list u-flex-12/12 u-margin-bottom-none\">\r\n                            <li className=\"c-list__item\">Nawiązać znajomość z projektantem odzieży</li>\r\n                            <li className=\"c-list__item\">Nawiązać znajomość z dystrybutorem</li>\r\n                            <li className=\"c-list__item\">Wyszukać w internecie fabryki odzieży</li>\r\n                            <li className=\"c-list__item\">Wykonać telefon dla zorientowania w kosztach produkcji</li>\r\n                            <li className=\"c-list__item\">Kolejny krok</li>\r\n                            <li className=\"c-list__item\">Kolejny krok</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"u-flex-3/12 u-padding-horizontal-big\">\r\n                    <div className=\"c-card u-padding-big o-flex o-flex--centered-v u-margin-bottom-big\">\r\n                        <img className=\"c-nav__picture u-margin-right\" src={'s'}></img>\r\n                        <strong>{'s'}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"c-card c-card--info c-card--white u-padding-big o-flex o-flex o-flex--wrap\">\r\n                        <h3 className=\"o-flex u-text--left u-margin-bottom-tiny\">Koło życia</h3>\r\n                        <div className=\"o-flex\" style={{margin: '30px auto'}}>\r\n                                <LifeGraph/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './scss/main.css';\r\nimport { reportSuccess, reportError, reportLogout, reportLoading } from \"./views/helpers\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n// views\r\nimport Start from './views/start';\r\nimport Dashboard from './views/dashboard';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Start />\r\n          </Route>\r\n          <Route exact path=\"/dashboard/\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div> \r\n  );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}