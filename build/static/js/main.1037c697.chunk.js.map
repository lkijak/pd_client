{"version":3,"sources":["views/helpers.js","views/start.js","views/partials/FormSurvey.js","views/partials/Survey.js","views/partials/UserPanel.js","views/partials/MenuTop.js","views/partials/lifeChart.js","views/commons/Header.js","views/partials/UserProfile.js","views/commons/Progress.js","views/commons/TextInput.js","views/commons/Task.js","views/partials/MainTasks.js","views/commons/TextSubInput.js","views/partials/SubTasks.js","views/partials/TaskBoard.js","views/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["API_DOMAIN","googleClientId","user","JSON","parse","localStorage","getItem","getUsername","username","profileObj","email","slice","indexOf","reportSuccess","response","setItem","stringify","window","location","reload","reportError","console","error","reportLogout","clear","log","Start","className","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","Component","FormSurvey","handleChange","event","props","action","question","target","value","setState","done","setTimeout","stepindex","lastindex","document","querySelectorAll","click","submitForm","Box","m","height","this","FormControl","component","mb","RadioGroup","onChange","row","FormControlLabel","control","Radio","label","labelPlacement","Survey","state","survey","questionID","answers","removeSurvey","surContent","querySelector","classList","add","remove","axios","post","surveyName","userName","userResponseQuestionAndAnswerViewModels","then","info","catch","answer","questionText","answerText","id","steps","i","length","push","key","UserPanel","children","deleteUser","delete","params","status","removeItem","onClick","onLogoutSuccess","render","renderProps","disabled","LifeGraph","chartRef","React","createRef","data","getGraphData","get","dataset","temp","parseInt","parseFloat","toFixed","myChartRef","current","getContext","Chart","Legend","prototype","afterFit","type","labels","datasets","backgroundColor","options","responsive","maintainAspectRatio","scale","angleLines","display","ticks","min","max","precision","z","gridLines","drawOnChartArea","lineWidth","legend","fontColor","tooltips","enabled","animation","tension","duration","easing","from","to","loop","width","ref","mt","Button","variant","color","Header","title","ml","desc","data-tip","fontSize","style","UserProfile","src","imageUrl","name","margin","displayGraph","Progress","px","completed","labelSize","TextInput","text","changeText","e","submitText","createTask","TextField","fullWidth","background","onKeyDown","Task","isArchived","checkBoxOnClick","isMainTask","doneTask","doneSubTask","parentId","archiveOnClick","archiveTask","archiveSubTask","chooseTask","chooseMainTask","toString","MainTasks","calculateCompleted","tasks","filter","obj","isCompleted","len","calc","Math","floor","readyForTask","updateValue","map","task","taskid","TextSubInput","createSubTask","el","input","SubTasks","userSubtasks","isVisible","parentName","random","TaskBoard","textField","visibleTask","taskName","isArchiwed","getMainTasks","subtaskName","updatedState","newTask","editedTask","find","mainTask","updateWholeTask","subTask","index","splice","patch","self","number","parentTask","Dashboard","BE","displaySurvey","getUserData","isLifeCircleFilled","initLifeCircle","registerUser","userEmail","MenuTop","isUser","App","loggedIn","updateLogin","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1037c697.chunk.js","sourcesContent":["\n/**\n * Libraries\n */\nimport axios from 'axios';\n\n/**\n * backend client variables\n */\nexport const API_DOMAIN = `https://smart-evolution.azurewebsites.net`;\nexport const googleClientId = `850157239961-g16l5ifn3btccslaogvpicf7umrbrubd.apps.googleusercontent.com`;\n\n// local storage\nexport const user = JSON.parse(localStorage.getItem('user'));\n\n// define username\nexport const getUsername = () => {\n  let user = JSON.parse(localStorage.getItem('user'));\n  let username = user.profileObj.email;\n    username = username.slice(0, username.indexOf('@'));\n  return username\n}\n\n/**\n * Google login functions\n */\nexport const reportSuccess = response => {\n  localStorage.setItem('user', JSON.stringify(response));\n  window.location.reload();\n}\n\nexport const reportError = response => {\n  console.error('Błąd logowania:', response); // eslint-disable-line\n}\n\nexport const reportLoading = () => {\n  console.log('Ładowanie...') // eslint-disable-line\n}\n\nexport const reportLogout = () => {\n  localStorage.clear('user');\n  console.log('Pomyślnie wylogowano.')\n  window.location.reload();\n}","import React, { Component } from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport { googleClientId, reportSuccess, reportError, user } from './helpers';\n\nclass Start extends Component {  \n\n    render() {\n        return (            \n            <section className=\"o-section o-section--full c-start o-flex o-flex--centered o-flex--grids o-flex--wrap u-padding-none\">\n                <div className=\"c-start__image o-flex__item u-flex-7/12\"></div>\n                <div className=\"c-start__container o-flex__item u-flex-5/12 o-flex o-flex--centered\">\n                    {/* Top Right Menu */}\n                    <div className=\"c-menu--top\">\n                    <div className=\"c-heading c-heading--h3 u-font-color--3 u-text--bold u-margin-none\">SMART Evolution</div>\n                    </div>\n\n                    {/* Floating Content */}\n                    <div className=\"o-wrapper c-start__content u-bg-color--1\">\n                        <p className=\"c-heading c-heading--h0 u-margin-bottom-huge u-font-color--1 u-text--thin\">\n                            Przemień marzenia w plan\n                        </p>\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase\">\n                            Wykreuj rzeczywistość dla siebie\n                        </p>\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase u-margin-bottom-none\">\n                            i ciesz się życiem, jakiego chciałeś\n                        </p>\n                    \n                        {/* Log-in Buttons */}\n                        <div className=\"c-start__buttons u-position-relative\">\n                            <GoogleLogin\n                                clientId={googleClientId}\n                                buttonText=\"Zaloguj z Google\"\n                                onSuccess={reportSuccess}\n                                onFailure={reportError}\n                                cookiePolicy={'single_host_origin'}\n                                isSignedIn={false}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Start\n\n","import React, { Component } from 'react'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from '@material-ui/core/Box';\n\nexport class FormSurvey extends Component {\n\n    handleChange = (event) => {\n        // Add value to survey state\n        this.props.action(this.props.question, event.target.value);\n        this.setState({done: 1});\n\n        setTimeout(() => {\n            // Go to next step or send survey and close form popup\n            if (this.props.stepindex < (this.props.lastindex -1)) {\n                document.querySelectorAll('.multi-step-nav button')[1].click();\n            } else {\n                this.props.submitForm();\n            }\n        }, 300);\n    };\n\n    render() {\n        return (\n            <Box m=\"auto\" className=\"survey-content\">\n                <Box className=\"survey-header\" height={'100px'}><h3>{this.props.question}</h3></Box>\n                <FormControl component=\"fieldset\">\n                    <Box className=\"survey-header\" mb={2}>Odpowiedz według podanej skali</Box>\n                    <RadioGroup className=\"survey-header\" onChange={this.handleChange} row>\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" labelPlacement=\"top\" />\n                    </RadioGroup>\n                </FormControl>\n            </Box>\n        )\n    }\n} \n\nexport default FormSurvey\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport FormSurvey from './FormSurvey';\nimport MultiSteps from \"multi-step-form-ui\";\nimport { getUsername, API_DOMAIN } from \"../helpers\";\n\nexport class Survey extends Component {\n  state = {\n    survey: [\n      // Rozwój osobisty\n      {\n        questionID: 1,\n        question: `Czy masz plan na siebie?`,\n      },\n      {\n        questionID: 2,\n        question: `Czy inwestujesz w swój rozwój?`,\n      },\n      {\n        questionID: 3,\n        question: `Czy regularnie czytasz książki?`,\n      },\n\n      // Kariera\n      {\n        questionID: 4,\n        question: `Czy obecna praca daje Ci satysfakcję?`,\n      },\n      {\n        questionID: 5,\n        question: `Czy lubisz swoją pracę?`,\n      },\n      {\n        questionID: 6,\n        question: `Czy praca pozwala Ci się rozwijać?`,\n      },\n\n      // Finanse\n      {\n        questionID: 7,\n        question: `Czy jesteś zadowolony z poziomu dochodu?`,\n      },\n      {\n        questionID: 8,\n        question: `Czy masz zabezpieczenie finansowe na kilka miesięcy bez pracy?`,\n      },\n      {\n        questionID: 9,\n        question: `Czy wystarcza Ci na życie i podstawowe rzeczy?`,\n      },\n\n      // Otoczenie\n      {\n        questionID: 10,\n        question: `Czy jesteś zadowolony z miejsca zamieszkania, stanu mieszkania?`,\n      },\n      {\n        questionID: 11,\n        question: `Czy lubisz swoje otoczenie?`,\n      },\n      {\n        questionID: 12,\n        question: `Czy otoczenie zapewnia Ci poczucie bezpieczeństwa?`,\n      },\n\n      // Partner, małżonek\n      {\n        questionID: 13,\n        question: `Czy jesteś szczęśliwy w obecnym związku?`,\n      },\n      {\n        questionID: 14,\n        question: `Czy partner jest dla Ciebie wsparciem?`,\n      },\n      {\n        questionID: 15,\n        question: `Czy ufacie sobie?`,\n      },\n\n      // Rodzina i przyjaciele\n      {\n        questionID: 16,\n        question: `Czy masz zaufane grono przyjaciół?`,\n      },\n      {\n        questionID: 17,\n        question: `Czy możesz polegać na rodzinnie i przyjaciołach?`,\n      },\n      {\n        questionID: 18,\n        question: `Czy lubisz spędzać czas z rodziną?`,\n      },\n\n      // Wypoczynek i rozrywka\n      {\n        questionID: 19,\n        question: `Czy masz czas na swoje hobby i zainteresowania?`,\n      },\n      {\n        questionID: 20,\n        question: `Czy budzisz się wypoczęty?`,\n      },\n      {\n        questionID: 21,\n        question: `Czy wychodzisz z domu i odpoczywasz np. w parku, lesie?`,\n      },\n\n      // Zdrowie i sprawność fiz\n      {\n        questionID: 22,\n        question: `Czy masz jakieś dolegliwości, choroby przewlekłe?`,\n      },\n      {\n        questionID: 23,\n        question: `Czy robisz profilaktyczne badania?`,\n      },\n      {\n        questionID: 24,\n        question: `Czy uprawiasz sport, ćwiczenia fizyczne, regularnie?`,\n      },\n    ],\n    answers: []\n  }\n\n  removeSurvey = () => {\n    const surContent = document.querySelector(\".survey-content\");\n    const survey = document.querySelector(\"#survey\");\n    surContent.classList.add('fading-out');\n    survey.classList.add('fading-out');\n    setTimeout(()=>{\n      surContent.remove();\n      survey.remove();\n      window.location.reload();\n    }, 500);\n  }\n\n  submitForm = () => {\n    axios.post(`${API_DOMAIN}/Survey/UserResponse`, {\n      surveyName: \"Life_Circle\",\n      userName: getUsername(),\n      userResponseQuestionAndAnswerViewModels: this.state.answers\n    },\n      {\n        'Content-Type': 'application/json'\n      })\n      .then((response) => {\n          console.info(\"Wysłano ankietę. Następuje zamknięcie ankiety.\");\n          this.removeSurvey();\n      })\n      .catch((error) => {\n        console.error(\"Błąd wysyłki ankiety.\", error);\n      });\n  }\n\n  handleChange = (question, answer) => {\n    this.setState({\n      answers: [...this.state.answers, {\n        questionText: question,\n        answerText: answer\n      }]\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"survey\" className=\"overlay\">\n        <MultiSteps>\n          {(() => {\n            const steps = [];\n\n            for (let i = 0; i < this.state.survey.length; i++) {\n              steps.push(\n                <FormSurvey \n                  key={this.state.survey[i].questionID}\n                  question={this.state.survey[i].question}\n                  action={this.handleChange}\n                  lastindex={this.state.survey.length}\n                  submitForm={this.submitForm}\n                />);\n            }\n\n            return steps;\n          })()}\n        </MultiSteps>\n      </div>\n    )\n  }\n} \n\nexport default Survey\n","import React, { Component } from 'react'\n\nexport class UserPanel extends Component {\n    render() {\n        return (\n            <section className=\"c-dashboard o-flex o-flex--wrap o-flex--space-between u-padding-none u-bg-color--6 o-flex--lock-top js-dashboard\">\n                {this.props.children}\n            </section>\n        )\n    }\n}\n\nexport default UserPanel\n","import React, { Component } from 'react'\nimport { GoogleLogout } from 'react-google-login';\nimport { googleClientId, reportLogout, getUsername, API_DOMAIN } from '../helpers';\nimport axios from 'axios';\n\nexport class UserPanel extends Component {\n\n  deleteUser = () => {\n    let userName = getUsername();\n\n    axios.delete(`${API_DOMAIN}/User`, {\n      params: {\n        userName: userName\n      }\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('Usunięto użytkownika ' + userName, response);\n          reportLogout();\n          localStorage.removeItem(\"user\");\n          window.location.reload();\n        }\n      })\n      .catch((error) => {\n        console.log('Błąd usuwania użytkownika.', error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"u-flex-12/12 u-padding-big u-padding-horizontal-great u-text--right u-text--smallest u-bg-color--6 u-font-color--3\">\n        <a className=\"o-link u-margin-right-great\">RODO</a>\n        <a className=\"o-link u-margin-right-great\">Polityka prywatności</a>\n        <a className=\"o-link u-margin-right-great\" onClick={this.deleteUser}>Usuń konto</a>\n        <GoogleLogout\n          clientId={googleClientId}\n          buttonText=\"Wyloguj\"\n          onLogoutSuccess={reportLogout}\n          render={renderProps => (\n            <a className=\"o-link\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Wyloguj</a>\n          )}\n        >\n        </GoogleLogout>\n      </div>\n    )\n  }\n}\n\nexport default UserPanel\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { getUsername, API_DOMAIN } from \"../helpers\";\nimport Chart from \"chart.js\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nclass LifeGraph extends Component {\n  chartRef = React.createRef();\n\n  state = {\n    data: null\n  }\n\n  getGraphData = () => {\n    axios.get(`${API_DOMAIN}/Survey/UserResponse`, {\n      params: {\n        surveyName: \"Life_Circle\",\n        userName: getUsername()\n      }\n    })\n      .then((response) => {\n        console.log(\"pobrano dane grafu.\", response);\n        let dataset = response.data.userResponseQuestionAndAnswerViewModels;\n        let data = [];\n\n        for (let i = 0; i < dataset.length; i=i+3) {\n          let temp = parseInt(dataset[i].answerText) + parseInt(dataset[i+1].answerText) + parseInt(dataset[i+2].answerText);\n          temp = temp/3;\n          temp = parseFloat(temp.toFixed(2))\n          data = [...data, temp];\n        }\n        this.setState({data: data});\n      })\n      .catch((error) => {\n        console.error(\"Błąd pobierania danych grafu.\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.getGraphData();\n\n    setTimeout(() => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n      Chart.Legend.prototype.afterFit = function () {\n        this.height = this.height + 20;\n      };\n\n      new Chart(myChartRef, {\n        type: 'polarArea',\n        data: {\n          labels: ['Rozwój osobisty', 'Kariera', 'Finanse', 'Otoczenie', 'Partner', 'Rodzina', 'Wypoczynek', 'Zdrowie'],\n          datasets: [{\n            data: this.state.data,\n            backgroundColor: ['rgba(255,61,0 ,1)', 'rgba(255,171,0 ,1)', 'rgba(174,234,0 ,1)', 'rgba(0,200,83 ,1)', 'rgba(0,184,212 ,1)', 'rgba(41,98,255 ,1)', 'rgba(98,0,234 ,1)', 'rgba(213,0,0 ,1)']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scale: {\n            angleLines: {\n              display: false\n            },\n            ticks: {\n              min: 0,\n              max: 5,\n              precision: 0,\n              z: 1,\n              display: false,\n            },\n            gridLines: {\n              drawOnChartArea: true,\n              lineWidth: 2,\n            },\n          },\n          legend: {\n            display: true,\n            labels: {\n              fontColor: 'black'\n            }\n          },\n          tooltips: {\n            enabled: true\n          },\n          animation: {\n            tension: {\n              duration: 1000,\n              easing: 'easeOutCubic',\n              from: 1,\n              to: 0,\n              loop: true\n            }\n          },\n        }\n      });\n    }, 650);\n  }\n  render() {\n    return (\n      <div className=\"c-chart--life-graph\">\n        <canvas width=\"350\" height=\"400\"\n          id=\"myChart\"\n          ref={this.chartRef}\n        />\n        <Box mt={1}>\n          <div className=\"o-flex o-flex--wrap o-flex--space-between\">\n            <Button variant=\"contained\" color=\"primary\">Nowy test</Button>\n            <Button variant=\"contained\" color=\"primary\">Historia</Button>\n          </div>\n        </Box>\n      </div>\n    )\n  }\n} \n\nexport default LifeGraph;","import React, { Component } from 'react'\nimport HelpIcon from '@material-ui/icons/Help';\nimport ReactTooltip from 'react-tooltip';\nimport Box from '@material-ui/core/Box';\n\nexport class Header extends Component {\n    render() {\n        return (\n            <Box mb={1}>\n                <h3 className=\"u-text--left u-margin-bottom-tiny\">\n                    {this.props.title}\n                    <Box display=\"inline\" ml={0.5}>\n                        {this.props.desc && <HelpIcon\n                            data-tip={this.props.desc}\n                            color=\"action\"\n                            fontSize=\"small\"\n                            ml=\"2\"\n                            className=\"fadeOnStart\"/>\n                        }\n                    </Box>\n                    <ReactTooltip style=\"max-width: 400px\"/>\n                </h3>\n            </Box>\n        )\n    }\n} \n\nexport default Header\n","import React, { Component } from 'react'\nimport LifeGraph from './lifeChart';\nimport { user } from '../helpers';\nimport Header from '../commons/Header';\n\nexport class UserProfile extends Component {\n    render() {\n        return (\n            <div className=\"u-flex-3/12 u-padding-horizontal-big\">\n                <div className=\"c-card u-padding-big u-padding-horizontal-great o-flex o-flex--centered-v u-margin-bottom-big\">\n                    <img className=\"c-nav__picture u-margin-right fadeOnStart\" src={user.profileObj.imageUrl}></img>\n                    <strong>{user.profileObj.name}</strong>\n                </div>\n                <div className=\"c-card c-card--info c-card--white u-padding-great o-flex o-flex o-flex--wrap\">\n                    <Header \n                        title=\"Koło życia\" \n                        desc=\"Koło powstało na podstawie Twoich odpowiedzi w ankiecie. Obrazuje obszary życia, nad którymi powinieneś popracować, aby utrzymać równowagę w życiu. Poziom wartości powinien być wyrównywany i stopniowo zwiększany w każdej ze sfer.\"\n                    />\n                    <div className=\"o-flex\" style={{ margin: '0 auto 0 auto' }}>\n                    {this.props.displayGraph ? <LifeGraph /> : false}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserProfile\n","import React, { Component } from 'react'\nimport ProgressBar from '@ramonak/react-progress-bar';\nimport Box from '@material-ui/core/Box';\n\nexport class Progress extends Component {\n    render() {\n        return (\n            <Box mb={2.5} px={0} className=\"fadeOnStart light-shadow\">\n                <ProgressBar \n                    completed={this.props.completed} \n                    labelSize=\"9px\" \n                    height=\"10px\" \n                    className=\"fadeOnStart\" \n                />\n            </Box>\n        )\n    }\n} \n\nexport default Progress\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\n\n\nexport class TextInput extends Component {\n\n    state = {\n        text: \"\"\n    }\n\n    changeText = (e) => {\n        this.setState({text: e.target.value});\n    }\n    \n    submitText = (e) => {\n        if (e.key === 'Enter' && this.state.text !== \"\") {\n            this.props.createTask(this.state.text);\n            this.setState({text: \"\"});\n        }\n    }\n\n    render() {\n        return (\n            <Box mb={2.5}>\n                <TextField \n                    id=\"standard-search\" \n                    label={this.props.label} \n                    variant=\"outlined\" \n                    type=\"search\" \n                    fullWidth\n                    background=\"white\"\n                    margin=\"dense\"\n                    onChange={(e) => {this.changeText(e)}}\n                    onKeyDown={(e) => {this.submitText(e)}}\n                    value={this.state.text}\n                />\n            </Box>\n        )\n    }\n}\n\nexport default TextInput\n","import React, { Component } from 'react'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nexport class Task extends Component {\n\n    state = {\n        isArchived: null\n    }\n\n    checkBoxOnClick = () => {\n        if(this.props.isMainTask){\n            this.props.doneTask(this.props.id);\n        } else {\n            this.props.doneSubTask(this.props.parentId, this.props.title);\n        }\n    }\n\n    archiveOnClick = () => {\n        this.setState({isArchived: true});\n        if(this.props.isMainTask){\n            this.props.archiveTask(this.props.id);\n        } else {\n            this.props.archiveSubTask(this.props.parentId, this.props.title);\n        }\n    }\n\n    chooseTask = () => {\n        if (this.props.isMainTask) {\n            this.props.chooseMainTask(this.props.id);\n        }\n    }\n\n    render() {\n        return (\n            <li \n                className={\"c-list__item\" + (this.props.completed ? \" done\" : \"\") + (this.state.isArchived ? \" u-hidden\" : \"\")}\n                key={this.props.id} \n                id={this.props.id} \n                completed={this.props.completed.toString()}\n                onClick={this.chooseTask}\n            >\n                    <div className=\"task-title\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"task-icons\">\n                        <DeleteOutlineIcon \n                            onClick={this.archiveOnClick}\n                        />\n                        <CheckCircleOutlineIcon \n                            onClick={this.checkBoxOnClick}\n                        />\n                    </div>\n            </li>\n        )\n    }\n}\n\nexport default Task\n","import React, { Component } from 'react'\nimport Header from '../commons/Header';\nimport Progress from '../commons/Progress';\nimport TextInput from '../commons/TextInput';\nimport Task from '../commons/Task';\n\nexport class MainTasks extends Component {\n\n  calculateCompleted = () => {\n    let completed = this.props.tasks.filter((obj) => obj.isCompleted === true).length;\n    let len = this.props.tasks.length;\n    let calc = Math.floor(completed / len * 100);\n    if (!calc) {\n      calc = 0;\n    }\n    return calc;\n  }\n\n  render() {\n    return (\n      <div className=\"u-flex-1/2 o-flex o-flex--centered-h\">\n        <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\n          <Header\n            title=\"Twoje życiowe cele\"\n            desc=\"Przeglądaj swoje marzenia codziennie, aby pamiętać do czego dążysz i jak to osiągnąć.\"\n          />\n          {this.props.readyForTask && <Progress completed={this.calculateCompleted()} />}\n          <TextInput label=\"Dodaj nowy cel\" createTask={this.props.createTask} updateValue={this.props.updateValue} />\n          <ul className=\"c-list u-flex-12/12 u-margin-bottom-none list-scrolling\">\n            {this.props.readyForTask && this.props.tasks.map((task) => {\n              return <Task \n                task={task} \n                key={task.taskid} \n                id={task.taskid} \n                title={task.name} \n                completed={task.isCompleted} \n                chooseMainTask={this.props.chooseMainTask}\n                doneTask={this.props.doneTask}\n                archiveTask={this.props.archiveTask}\n                isMainTask={true}\n              />\n            })}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MainTasks\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\n\n\nexport class TextSubInput extends Component {\n\n    state = {\n        text: \"\"\n    }\n\n    changeText = (e) => {\n        this.setState({text: e.target.value});\n    }\n    \n    submitText = (e) => {\n        if (e.key === 'Enter' && this.state.text !== \"\") {\n            this.props.createSubTask(this.props.parentId, this.state.text);\n            this.setState({text: \"\"});\n        }\n    }\n\n    render() {\n        return (\n            <Box mb={2.5}>\n                <TextField \n                    ref={(el) => (this.input = el)}\n                    id=\"standard-search\" \n                    label={this.props.label} \n                    variant=\"outlined\" \n                    type=\"search\" \n                    fullWidth\n                    background=\"white\"\n                    margin=\"dense\"\n                    onChange={(e) => {this.changeText(e)}}\n                    onKeyDown={(e) => {this.submitText(e)}}\n                    value={this.state.text}\n                />\n            </Box>\n        )\n    }\n}\n\nexport default TextSubInput\n","import React, { Component } from 'react'\nimport Header from '../commons/Header';\nimport Progress from '../commons/Progress';\nimport TextSubInput from '../commons/TextSubInput';\nimport Task from '../commons/Task';\nimport { MarkunreadSharp } from '@material-ui/icons';\n\nexport class SubTasks extends Component {\n\n  calculateCompleted = () => {\n    let completed = this.props.userSubtasks.filter((obj) => obj.isCompleted === true).length;\n    let len = this.props.userSubtasks.length;\n    let calc = Math.floor(completed / len * 100);\n    if (!calc) {\n      calc = 0;\n    }\n    return calc;\n  }\n\n  render() {\n    return (\n      <div className={`u-flex-1/2 u-padding-horizontal-big ${this.props.isVisible ? 'is-active' : 'u-hidden'}`}>\n        <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\n          <Header\n            title={`Plan: ${this.props.parentName}`}\n            desc=\"Twój plan to gwarancja osiągnięcia zamierzonego celu. Przemyśl realizację zgodnie z metodologią SMART, następnie wypisz wszystkie kroki i zacznij działać.\"\n          />\n          {this.props.readyForTask && <Progress completed={this.calculateCompleted()} />}\n          <TextSubInput label=\"Dodaj nowy krok\" createSubTask={this.props.createSubTask} parentId={this.props.parentId} updateValue={this.props.updateValue} />\n          <ul className=\"c-list u-flex-12/12 u-margin-bottom-none list-scrolling\">\n            {this.props.readyForTask && this.props.userSubtasks.map((task) => {\n                return <Task \n                  task={task} \n                  key={Math.floor(Math.random() * Math.floor(300000))} \n                  id={Math.floor(Math.random() * Math.floor(300000))} \n                  title={task.name} \n                  completed={task.isCompleted} \n                  isMainTask={false}\n                  doneSubTask={this.props.doneSubTask}\n                  archiveSubTask={this.props.archiveSubTask}\n                  parentId={this.props.parentId}\n                />\n            })}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SubTasks\n","import React, { Component } from 'react'\nimport MainTasks from './MainTasks';\nimport SubTasks from './SubTasks';\nimport axios from 'axios';\nimport { getUsername, API_DOMAIN } from '../helpers';\n\nexport class TaskBoard extends Component {\n\n  state = {\n    textField: \"\",\n    readyForTask: null,\n    tasks: null,\n    visibleTask: null,\n  }\n\n  updateValue = (text) => {\n    this.setState({ textField: text });\n  }\n\n  createTask = (taskName) => {\n      const userName = getUsername();\n\n      axios.post(`${API_DOMAIN}/UserTask`, {\n        name: taskName,\n        isCompleted: false,\n        isArchiwed: false,\n        userName: userName\n      },\n      {\n        'Content-Type': 'application/json'\n      })\n      .then((response) => {\n        console.log(\"Wysłano dane do utworzenia głównego celu.\", response);\n        this.getMainTasks();\n      })\n      .catch((error) => {\n        console.error(\"Błąd wysyłki danych do utworzenia celu.\", error);\n      });\n  }\n\n  createSubTask = (parentId, subtaskName) => {\n      let updatedState = this.state.tasks;\n      const newTask = {\n        name: subtaskName,\n        isCompleted: false,\n      }\n      \n      let editedTask = updatedState.find(mainTask => mainTask.taskid === parentId);\n      editedTask.userSubtasks = [...editedTask.userSubtasks, newTask];\n\n      this.setState({tasks: updatedState});\n      this.updateWholeTask(editedTask);\n  }\n\n  archiveTask = (id) => {\n    let updatedState = this.state.tasks;\n    \n    let editedTask = updatedState.find(mainTask => mainTask.taskid === id);\n    editedTask.isArchiwed = true;\n    console.log(\"Archiwizacja celu:\", editedTask);\n    \n    this.setState({tasks: updatedState});\n    this.updateWholeTask(editedTask);\n  }\n\n  doneTask = (id) => {\n    let updatedState = this.state.tasks;\n    \n    let editedTask = updatedState.find(mainTask => mainTask.taskid === id);\n    editedTask.isCompleted = !editedTask.isCompleted;\n    \n    this.setState({tasks: updatedState});\n    this.updateWholeTask(editedTask);\n  }\n\n  archiveSubTask = (parentId, subtaskName) => {\n    let updatedState = this.state.tasks;\n    \n    let editedTask = updatedState.find(mainTask => mainTask.taskid === parentId);\n    let subTask = editedTask.userSubtasks.find(subTask => subTask.name === subtaskName);\n    let index = editedTask.userSubtasks.indexOf(subTask);\n    if(index !== -1) {\n      editedTask.userSubtasks.splice(index, 1);\n    }\n    \n    this.setState({tasks: updatedState});\n    this.updateWholeTask(editedTask);\n  }\n\n  doneSubTask = (parentId, subtaskName) => {\n    let updatedState = this.state.tasks;\n    \n    let editedTask = updatedState.find(mainTask => mainTask.taskid === parentId);\n    let subTask = editedTask.userSubtasks.find(subTask => subTask.name === subtaskName);\n    subTask.isCompleted = !subTask.isCompleted;\n    \n    this.setState({tasks: updatedState});\n    this.updateWholeTask(editedTask);\n  }\n\n  updateWholeTask = (editedTask) => {\n    axios.patch(`${API_DOMAIN}/UserTask`, editedTask, {\n      'Content-Type': 'application/json'\n    })\n    .then((response) => {\n      console.log(\"Wysłano dane zaktualizowanego zadania i jego podrzędnych zadań.\", response);\n      this.getMainTasks();\n    })\n    .catch((error) => {\n      console.error(\"Błąd wysyłki danych zaktualizowanego zadania i jego podrzędnych zadań.\", error);\n    });\n  }\n\n  getMainTasks = () => {\n    const userName = getUsername();\n    const self = this;\n\n    axios.get(`${API_DOMAIN}/UserTask`, {\n      params: {\n        userName: userName\n      }\n    })\n      .then((response) => {\n        console.log(\"Pobrano główne cele:\", response);\n        self.setState({\n          tasks: response.data,\n          readyForTask: true,\n          textField: null\n        });\n      })\n      .catch((error) => {\n        console.error('Błąd pobierania listy zadań.', error);\n      });\n  }\n\n  chooseMainTask = (number) => {\n    console.log(\"kliknięto główny task\");\n    this.setState({ visibleTask: number })\n  }\n\n  componentDidMount() {\n    this.getMainTasks();\n  }\n\n  render() {\n    return (\n      <div className=\"u-flex-8/12 o-flex u-padding-horizontal-big\">\n\n        <MainTasks\n          tasks={this.state.tasks}\n          readyForTask={this.state.readyForTask}\n          updateValue={this.updateValue}\n          createTask={this.createTask}\n          chooseMainTask={this.chooseMainTask}\n          doneTask={this.doneTask}\n          archiveTask={this.archiveTask}\n        />\n\n        {this.state.tasks && this.state.tasks.map((parentTask) => {\n          return <SubTasks\n            key={parentTask.taskid}\n            parentId={parentTask.taskid}\n            parentName={parentTask.name}\n            userSubtasks={parentTask.userSubtasks}\n            readyForTask={this.state.readyForTask.toString()}\n            isVisible={this.state.visibleTask === parentTask.taskid}\n            updateValue={this.updateValue}\n            createSubTask={this.createSubTask}\n            doneSubTask={this.doneSubTask}\n            archiveSubTask={this.archiveSubTask}\n          />\n        })}\n\n      </div>\n    )\n  }\n}\n\nexport default TaskBoard\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { user, getUsername, API_DOMAIN } from './helpers';\nimport { Survey } from \"./partials/Survey\";\nimport UserPanel from './partials/UserPanel';\nimport MenuTop from './partials/MenuTop';\nimport UserProfile from './partials/UserProfile';\nimport TaskBoard from './partials/TaskBoard';\n\nclass Dashboard extends Component {\n\n  state = {\n    user: user,\n    BE: null,\n    displaySurvey: null,\n    displayGraph: null\n  }\n\n  // Check if user exist in backend\n  getUserData = () => {\n    let username = getUsername();\n\n    axios.get(`${API_DOMAIN}/User`, {\n      params: {\n        userName: username\n      }\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('Zalogowano. Pobieramy dane użytkownika:', response);\n          this.setState({ BE: response.data });\n          if (!response.data.isLifeCircleFilled) {\n            this.displaySurvey();\n          }\n          if (response.data.isLifeCircleFilled) {\n            this.initLifeCircle();\n          }\n        } else {\n          console.error('Brak danych użytkownika w systemie.');\n          console.log('Następuje próba rejestracji użytkownika do systemu.');\n          this.registerUser();\n        }\n      })\n      .catch((error) => {\n        console.error('Brak danych użytkownika w systemie.', error);\n        console.log('Następuje próba rejestracji użytkownika do systemu.');\n        this.registerUser();\n      });\n  }\n\n  // Sends Google data to backend\n  registerUser = () => {\n    let userName = getUsername();\n    let userEmail = user.profileObj.email;\n\n    axios.post(`${API_DOMAIN}/User`,\n      {\n        userName: userName,\n        email: userEmail\n      },\n      {\n        'Content-Type': 'application/json'\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('Zarejestrowano nowego użytkownika.', response);\n          this.getUserData();\n          this.displaySurvey();\n        }\n      })\n      .catch((error) => {\n        if (error.response.status === 409) {\n          console.log('Użytkownik już istnieje w systemie i nie może być ponownie zarejestrowany.', error);\n          console.log('Następuje ponowna próba pobrania danych użytkownika.');\n          this.getUserData();\n        } else {\n          console.error('Błąd rejestracji nowego użytkownika.', error);\n          console.log('Brak dalszych wskazań do działania.');\n        }\n      });\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  initLifeCircle = () => {\n    this.setState({ displayGraph: true });\n  }\n\n  displaySurvey = () => {\n    this.setState({ displaySurvey: true });\n  }\n\n  render() {\n    return (\n      <UserPanel>\n        <MenuTop />\n        <UserProfile displayGraph={ this.state.displayGraph } />\n        <TaskBoard isUser={this.state.user ? \"true\" : \"false\"}/>\n        {this.state.displaySurvey && <Survey />}\n      </UserPanel>\n    );\n  }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { user } from './views/helpers';\nimport './scss/main.css';\n\n// views\nimport Start from './views/start';\nimport Dashboard from './views/dashboard';\n\nexport default class App extends Component {\n  state = {\n    loggedIn: 0\n  }\n\n  updateLogin = () => {\n    this.setState({ loggedIn: !this.state.loggedIn });\n  }\n\n  componentDidMount() {    \n    // Check if user cookie exist and mark user as logged or redirect to start as logged-out  \n    user && this.updateLogin();\n  }\n\n  render() {    \n    return (\n      <div className=\"App\">\n        { this.state.loggedIn ? <Dashboard /> : <Start updateLogin={this.updateLogin} /> }\n      </div> \n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}