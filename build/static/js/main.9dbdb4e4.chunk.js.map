{"version":3,"sources":["views/helpers.js","views/start.js","views/lifeChart.js","views/FormSurvey.js","views/Survey.js","views/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["API_DOMAIN","googleClientId","user","JSON","parse","localStorage","getItem","getUsername","username","profileObj","email","slice","indexOf","reportSuccess","response","setItem","stringify","window","location","reload","reportError","console","error","reportLogout","clear","log","Start","className","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","Component","LifeGraph","chartRef","React","createRef","state","data","getGraphData","axios","get","params","surveyName","userName","then","dataset","userResponseQuestionAndAnswerViewModels","i","length","temp","parseInt","answerText","parseFloat","toFixed","setState","catch","this","setTimeout","myChartRef","current","getContext","Chart","Legend","prototype","afterFit","height","type","labels","datasets","backgroundColor","options","responsive","maintainAspectRatio","scale","angleLines","display","ticks","min","max","precision","z","gridLines","drawOnChartArea","lineWidth","legend","fontColor","tooltips","enabled","animation","tension","duration","easing","from","to","loop","width","id","ref","FormSurvey","handleChange","event","props","action","question","target","value","done","stepindex","lastindex","document","querySelectorAll","click","submitForm","Box","m","FormControl","component","mb","RadioGroup","onChange","row","FormControlLabel","control","Radio","label","labelPlacement","Survey","survey","questionID","answers","removeSurvey","surContent","querySelector","classList","add","remove","post","info","answer","questionText","steps","push","key","Dashboard","BE","displaySurvey","displayGraph","getUserData","status","isLifeCircleFilled","initLifeCircle","registerUser","userEmail","onLogoutSuccess","render","renderProps","onClick","disabled","src","imageUrl","name","style","margin","App","loggedIn","updateLogin","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8QASaA,EAAU,4CACVC,EAAc,2EAEdC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAGvCC,EAAc,WACzB,IACIC,EADOL,KAAKC,MAAMC,aAAaC,QAAQ,SACvBG,WAAWC,MAE/B,OADEF,EAAWA,EAASG,MAAM,EAAGH,EAASI,QAAQ,OA6DrCC,EAAgB,SAAAC,GAC3BT,aAAaU,QAAQ,OAAQZ,KAAKa,UAAUF,IAC5CG,OAAOC,SAASC,UAGLC,EAAc,SAAAN,GACzBO,QAAQC,MAAM,4BAAmBR,IAOtBS,EAAe,WAC1BlB,aAAamB,MAAM,QACnBH,QAAQI,IAAI,8BACZR,OAAOC,SAASC,U,gBCjDHO,E,uKAvCP,OACI,6BAASC,UAAU,uGACf,yBAAKA,UAAU,4CACf,yBAAKA,UAAU,uEAEX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,sEAAf,oBAIA,yBAAKA,UAAU,4CACX,uBAAGA,UAAU,6EAAb,iCAGA,uBAAGA,UAAU,4DAAb,8CAGA,uBAAGA,UAAU,iFAAb,4DAKA,yBAAKA,UAAU,wCACX,kBAAC,cAAD,CACIC,SAAU3B,EACV4B,WAAW,mBACXC,UAAWjB,EACXkB,UAAWX,EACXY,aAAc,qBACdC,YAAY,Y,GAhCxBC,a,yBC0GLC,E,4MAvGbC,SAAWC,IAAMC,Y,EAEjBC,MAAQ,CACNC,KAAM,M,EAGRC,aAAe,WACbC,IAAMC,IAAN,UAAa3C,EAAb,wBAA+C,CAC7C4C,OAAQ,CACNC,WAAY,cACZC,SAAUvC,OAGXwC,MAAK,SAACjC,GACLO,QAAQI,IAAI,sBAAuBX,GAInC,IAHA,IAAIkC,EAAUlC,EAAS0B,KAAKS,wCACxBT,EAAO,GAEFU,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,GAAI,EAAG,CACzC,IAAIE,EAAOC,SAASL,EAAQE,GAAGI,YAAcD,SAASL,EAAQE,EAAE,GAAGI,YAAcD,SAASL,EAAQE,EAAE,GAAGI,YACvGF,GAAY,EACZA,EAAOG,WAAWH,EAAKI,QAAQ,IAC/BhB,EAAI,sBAAOA,GAAP,CAAaY,IAEnB,EAAKK,SAAS,CAACjB,KAAMA,OAEtBkB,OAAM,SAACpC,GACND,QAAQC,MAAM,0CAAiCA,O,kEAIhC,IAAD,OAClBqC,KAAKlB,eAELmB,YAAW,WACT,IAAMC,EAAa,EAAKzB,SAAS0B,QAAQC,WAAW,MAEpDC,IAAMC,OAAOC,UAAUC,SAAW,WAChCR,KAAKS,OAAST,KAAKS,OAAS,IAG9B,IAAIJ,IAAMH,EAAY,CACpBQ,KAAM,YACN7B,KAAM,CACJ8B,OAAQ,CAAC,qBAAmB,UAAW,UAAW,YAAa,UAAW,UAAW,aAAc,WACnGC,SAAU,CAAC,CACT/B,KAAM,EAAKD,MAAMC,KACjBgC,gBAAiB,CAAC,oBAAqB,qBAAsB,qBAAsB,oBAAqB,qBAAsB,qBAAsB,oBAAqB,uBAG7KC,QAAS,CACPC,YAAY,EACZC,qBAAqB,EACrBC,MAAO,CACLC,WAAY,CACVC,SAAS,GAEXC,MAAO,CACLC,IAAK,EACLC,IAAK,EACLC,UAAW,EACXC,EAAG,EACHL,SAAS,GAEXM,UAAW,CACTC,iBAAiB,EACjBC,UAAW,IAGfC,OAAQ,CACNT,SAAS,EACTR,OAAQ,CACNkB,UAAW,UAGfC,SAAU,CACRC,SAAS,GAEXC,UAAW,CACTC,QAAS,CACPC,SAAU,IACVC,OAAQ,eACRC,KAAM,EACNC,GAAI,EACJC,MAAM,SAKb,O,+BAGH,OACE,yBAAKtE,UAAU,uBACb,4BAAQuE,MAAM,MAAM9B,OAAO,MACzB+B,GAAG,UACHC,IAAKzC,KAAKvB,gB,GAjGIF,a,6CCqCTmE,EApCf,4MAEIC,aAAe,SAACC,GAEZ,EAAKC,MAAMC,OAAO,EAAKD,MAAME,SAAUH,EAAMI,OAAOC,OACpD,EAAKnD,SAAS,CAACoD,KAAM,IAErBjD,YAAW,WAEH,EAAK4C,MAAMM,UAAa,EAAKN,MAAMO,UAAW,EAC9CC,SAASC,iBAAiB,0BAA0B,GAAGC,QAEvD,EAAKV,MAAMW,eAEhB,MAdX,uDAkBQ,OACI,kBAACC,EAAA,EAAD,CAAKC,EAAE,OAAO1F,UAAU,kBACpB,kBAACyF,EAAA,EAAD,CAAKzF,UAAU,gBAAgByC,OAAQ,SAAS,4BAAKT,KAAK6C,MAAME,WAChE,kBAACY,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACH,EAAA,EAAD,CAAKzF,UAAU,gBAAgB6F,GAAI,GAAnC,uCACA,kBAACC,EAAA,EAAD,CAAY9F,UAAU,gBAAgB+F,SAAU/D,KAAK2C,aAAcqB,KAAG,GAClE,kBAACC,EAAA,EAAD,CAAkBhB,MAAM,IAAIiB,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,IAAIC,eAAe,QACzE,kBAACJ,EAAA,EAAD,CAAkBhB,MAAM,IAAIiB,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,IAAIC,eAAe,QACzE,kBAACJ,EAAA,EAAD,CAAkBhB,MAAM,IAAIiB,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,IAAIC,eAAe,QACzE,kBAACJ,EAAA,EAAD,CAAkBhB,MAAM,IAAIiB,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,IAAIC,eAAe,QACzE,kBAACJ,EAAA,EAAD,CAAkBhB,MAAM,IAAIiB,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,IAAIC,eAAe,eA5BjG,GAAgC9F,a,iBCDnB+F,EAAb,4MACE1F,MAAQ,CACN2F,OAAQ,CAEN,CACEC,WAAY,EACZzB,SAAS,4BAEX,CACEyB,WAAY,EACZzB,SAAS,wCAEX,CACEyB,WAAY,EACZzB,SAAS,6CAIX,CACEyB,WAAY,EACZzB,SAAS,8CAEX,CACEyB,WAAY,EACZzB,SAAS,qCAEX,CACEyB,WAAY,EACZzB,SAAS,gDAIX,CACEyB,WAAY,EACZzB,SAAS,iDAEX,CACEyB,WAAY,EACZzB,SAAS,uEAEX,CACEyB,WAAY,EACZzB,SAAS,uDAIX,CACEyB,WAAY,GACZzB,SAAS,wEAEX,CACEyB,WAAY,GACZzB,SAAS,+BAEX,CACEyB,WAAY,GACZzB,SAAS,2DAIX,CACEyB,WAAY,GACZzB,SAAS,gEAEX,CACEyB,WAAY,GACZzB,SAAS,0CAEX,CACEyB,WAAY,GACZzB,SAAS,qBAIX,CACEyB,WAAY,GACZzB,SAAS,8CAEX,CACEyB,WAAY,GACZzB,SAAS,mEAEX,CACEyB,WAAY,GACZzB,SAAS,qDAIX,CACEyB,WAAY,GACZzB,SAAS,mDAEX,CACEyB,WAAY,GACZzB,SAAS,wCAEX,CACEyB,WAAY,GACZzB,SAAS,2DAIX,CACEyB,WAAY,GACZzB,SAAS,oEAEX,CACEyB,WAAY,GACZzB,SAAS,sCAEX,CACEyB,WAAY,GACZzB,SAAS,8DAGb0B,QAAS,IAnHb,EAsHEC,aAAe,WACb,IAAMC,EAAatB,SAASuB,cAAc,mBACpCL,EAASlB,SAASuB,cAAc,WACtCD,EAAWE,UAAUC,IAAI,cACzBP,EAAOM,UAAUC,IAAI,cACrB7E,YAAW,WACT0E,EAAWI,SACXR,EAAOQ,SACPzH,OAAOC,SAASC,WACf,MA/HP,EAkIEgG,WAAa,WACXzE,IAAMiG,KAAN,UAAc3I,EAAd,wBAAgD,CAC9C6C,WAAY,cACZC,SAAUvC,IACV0C,wCAAyC,EAAKV,MAAM6F,SAEpD,CACE,eAAgB,qBAEjBrF,MAAK,SAACjC,GACHO,QAAQuH,KAAK,sEACb,EAAKP,kBAER3E,OAAM,SAACpC,GACND,QAAQC,MAAM,uCAAyBA,OAhJ/C,EAoJEgF,aAAe,SAACI,EAAUmC,GACxB,EAAKpF,SAAS,CACZ2E,QAAQ,GAAD,mBAAM,EAAK7F,MAAM6F,SAAjB,CAA0B,CAC/BU,aAAcpC,EACdpD,WAAYuF,QAxJpB,uDA6JY,IAAD,OACP,OACE,yBAAK1C,GAAG,SAASxE,UAAU,WACzB,kBAAC,IAAD,KACI,WAGA,IAFA,IAAMoH,EAAQ,GAEL7F,EAAI,EAAGA,EAAI,EAAKX,MAAM2F,OAAO/E,OAAQD,IAC5C6F,EAAMC,KACJ,kBAAC,EAAD,CACEC,IAAK,EAAK1G,MAAM2F,OAAOhF,GAAGiF,WAC1BzB,SAAU,EAAKnE,MAAM2F,OAAOhF,GAAGwD,SAC/BD,OAAQ,EAAKH,aACbS,UAAW,EAAKxE,MAAM2F,OAAO/E,OAC7BgE,WAAY,EAAKA,cAIvB,OAAO4B,EAdP,SAjKZ,GAA4B7G,aC2JbgH,E,4MAvJb3G,MAAQ,CACNrC,KAAMA,EACNiJ,GAAI,KACJC,cAAe,KACfC,aAAc,M,EAIhBC,YAAc,WACZ,IAAI9I,EAAWD,IAEfmC,IAAMC,IAAN,UAAa3C,EAAb,SAAgC,CAC9B4C,OAAQ,CACNE,SAAUtC,KAGXuC,MAAK,SAACjC,GACmB,MAApBA,EAASyI,QACXlI,QAAQI,IAAI,+CAA2CX,GACvD,EAAK2C,SAAS,CAAE0F,GAAIrI,EAAS0B,OACxB1B,EAAS0B,KAAKgH,oBACjB,EAAKJ,gBAEHtI,EAAS0B,KAAKgH,oBAChB,EAAKC,mBAGPpI,QAAQC,MAAM,4CACdD,QAAQI,IAAI,oEACZ,EAAKiI,mBAGRhG,OAAM,SAACpC,GACND,QAAQC,MAAM,2CAAuCA,GACrDD,QAAQI,IAAI,oEACZ,EAAKiI,mB,EAKXA,aAAe,WACb,IAAI5G,EAAWvC,IACXoJ,EAAYzJ,EAAKO,WAAWC,MAEhCgC,IAAMiG,KAAN,UAAc3I,EAAd,SACE,CACE8C,SAAUA,EACVpC,MAAOiJ,GAET,CACE,eAAgB,qBAEjB5G,MAAK,SAACjC,GACmB,MAApBA,EAASyI,SACXlI,QAAQI,IAAI,0CAAsCX,GAClD,EAAKwI,cACL,EAAKF,oBAGR1F,OAAM,SAACpC,GACwB,MAA1BA,EAAMR,SAASyI,QACjBlI,QAAQI,IAAI,iGAA8EH,GAC1FD,QAAQI,IAAI,qEACZ,EAAK6H,gBAELjI,QAAQC,MAAM,sDAAwCA,GACtDD,QAAQI,IAAI,sD,EASpBgI,eAAiB,WACf,EAAKhG,SAAS,CAAC4F,cAAc,K,EAG/BD,cAAgB,WACd,EAAK3F,SAAS,CAAC2F,eAAe,K,kEAR9BzF,KAAK2F,gB,+BAYL,OACE,6BAAS3H,UAAU,oHACjB,yBAAKA,UAAU,sHACb,uBAAGA,UAAU,+BAAb,QACA,uBAAGA,UAAU,+BAAb,6BACA,kBAAC,eAAD,CACEC,SAAU3B,EACV4B,WAAW,UACX+H,gBAAiBrI,EACjBsI,OAAQ,SAAAC,GAAW,OACjB,uBAAGnI,UAAU,SAASoI,QAASD,EAAYC,QAASC,SAAUF,EAAYE,UAA1E,eAMN,yBAAKrI,UAAU,wCACb,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,gCAAgCsI,IAAK/J,EAAKO,WAAWyJ,WACpE,gCAAShK,EAAKO,WAAW0J,OAE3B,yBAAKxI,UAAU,8EACb,wBAAIA,UAAU,4CAAd,wBACA,yBAAKA,UAAU,SAASyI,MAAO,CAAEC,OAAQ,gBACtC1G,KAAKpB,MAAM8G,cAAe,kBAAC,EAAD,SAKjC,yBAAK1H,UAAU,yCACb,yBAAKA,UAAU,8DACb,wBAAIA,UAAU,uCAAd,2BACA,uBAAGA,UAAU,kCAAb,wDAAoF,6BAApF,8DACA,wBAAIA,UAAU,4CACZ,wBAAIA,UAAU,gBAAd,kDACA,wBAAIA,UAAU,gBAAd,sCACA,wBAAIA,UAAU,gBAAd,6DACA,wBAAIA,UAAU,gBAAd,2CACA,wBAAIA,UAAU,gBAAd,qBACA,wBAAIA,UAAU,gBAAd,+DACA,wBAAIA,UAAU,gBAAd,yCAKN,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,8DACb,wBAAIA,UAAU,qCAAd,mEACA,uBAAGA,UAAU,gBAAb,yMACA,wBAAIA,UAAU,4CACZ,wBAAIA,UAAU,gBAAd,sEACA,wBAAIA,UAAU,gBAAd,0DACA,wBAAIA,UAAU,gBAAd,mDACA,wBAAIA,UAAU,gBAAd,+DACA,wBAAIA,UAAU,gBAAd,gBACA,wBAAIA,UAAU,gBAAd,qBAKLgC,KAAKpB,MAAM6G,eAAgB,kBAAC,EAAD,W,GAlJZlH,aCAHoI,E,4MACnB/H,MAAQ,CACNgI,SAAU,G,EAGZC,YAAc,WACZ,EAAK/G,SAAS,CAAE8G,UAAW,EAAKhI,MAAMgI,Y,kEAKtCrK,GAAQyD,KAAK6G,gB,+BAIb,OACE,yBAAK7I,UAAU,OACXgC,KAAKpB,MAAMgI,SAAW,kBAAC,EAAD,MAAgB,kBAAC,EAAD,CAAOC,YAAa7G,KAAK6G,mB,GAjBxCtI,aCIbuI,QACW,cAA7BxJ,OAAOC,SAASwJ,UAEe,UAA7BzJ,OAAOC,SAASwJ,UAEhBzJ,OAAOC,SAASwJ,SAASC,MACvB,2DCbNC,IAASf,OACP,kBAAC,IAAMgB,WAAP,KACE,kBAAC,EAAD,OAEF7D,SAAS8D,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlI,MAAK,SAAAmI,GACJA,EAAaC,gBAEdzH,OAAM,SAAApC,GACLD,QAAQC,MAAMA,EAAM8J,c","file":"static/js/main.9dbdb4e4.chunk.js","sourcesContent":["\n/**\n * Libraries\n */\nimport axios from 'axios';\n\n/**\n * backend client variables\n */\nexport const API_DOMAIN = `https://smart-evolution.azurewebsites.net`;\nexport const googleClientId = `850157239961-g16l5ifn3btccslaogvpicf7umrbrubd.apps.googleusercontent.com`;\n\nexport const user = JSON.parse(localStorage.getItem('user'));\n\n// define username\nexport const getUsername = () => {\n  let user = JSON.parse(localStorage.getItem('user'));\n  let username = user.profileObj.email;\n    username = username.slice(0, username.indexOf('@'));\n  return username\n}\n\n// // Check if user exist in backend\n// export const getUserData = () => {\n//   let username = getUsername();\n\n//   axios.get(`${API_DOMAIN}/User`, {\n//     params: {\n//       userName: username\n//     }\n//   })\n//   .then((response) => {\n//     if (response.status === 200) {\n//       console.log('Zalogowano. Pobieramy dane użytkownika:', response);\n//       return response.data;\n//     }\n//   })\n//   .catch((error) => {\n//     console.error('Brak danych użytkownika w systemie.', error);\n//     console.log('Następuje próba rejestracji użytkownika do systemu.');\n//     registerUser();\n//   });\n// }\n\n// // Sends Google data to backend\n// export const registerUser = () => {\n//   let userName = getUsername();\n//   let user = JSON.parse(localStorage.getItem('user'));\n//   let userEmail = user.profileObj.email;\n\n//   axios.post(`${API_DOMAIN}/User`, \n//   {\n//     userName: userName,\n//     email: userEmail\n//   },\n//   {\n//     'Content-Type': 'application/json'\n//   })\n//   .then(function (response) { \n//     if (response.status === 200) {\n//       console.log('Zarejestrowano nowego użytkownika.', response);\n//       getUserData();\n//     }\n//   })\n//   .catch(function (error) {\n//     if(error.response.status === 409){\n//       console.log('Użytkownik już istnieje w systemie i nie może być ponownie zarejestrowany.', error);\n//       console.log('Następuje ponowna próba pobrania danych użytkownika.');\n//       getUserData();\n//     } else {\n//       console.error('Błąd rejestracji nowego użytkownika.', error);\n//       console.log('Brak dalszych wskazań do działania.');\n//     }\n//   });\n// }\n\n/**\n * Google login functions\n */\nexport const reportSuccess = response => {\n  localStorage.setItem('user', JSON.stringify(response));\n  window.location.reload();\n}\n\nexport const reportError = response => {\n  console.error('Błąd logowania:', response); // eslint-disable-line\n}\n\nexport const reportLoading = () => {\n  console.log('Ładowanie...') // eslint-disable-line\n}\n\nexport const reportLogout = () => {\n  localStorage.clear('user');\n  console.log('Pomyślnie wylogowano.')\n  window.location.reload();\n}","import React, { Component } from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport { googleClientId, reportSuccess, reportError, user } from './helpers';\n\nclass Start extends Component {  \n\n    render() {\n        return (            \n            <section className=\"o-section o-section--full c-start o-flex o-flex--centered o-flex--grids o-flex--wrap u-padding-none\">\n                <div className=\"c-start__image o-flex__item u-flex-7/12\"></div>\n                <div className=\"c-start__container o-flex__item u-flex-5/12 o-flex o-flex--centered\">\n                    {/* Top Right Menu */}\n                    <div className=\"c-menu--top\">\n                    <div className=\"c-heading c-heading--h3 u-font-color--3 u-text--bold u-margin-none\">SMART Evolution</div>\n                    </div>\n\n                    {/* Floating Content */}\n                    <div className=\"o-wrapper c-start__content u-bg-color--1\">\n                        <p className=\"c-heading c-heading--h0 u-margin-bottom-huge u-font-color--1 u-text--thin\">\n                            Przemień marzenia w plan\n                        </p>\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase\">\n                            Wykreuj rzeczywistość dla siebie\n                        </p>\n                        <p className=\"c-heading c-heading--h3 u-text--normal u-text--uppercase u-margin-bottom-none\">\n                            i ciesz się życiem, jakiego chciałeś\n                        </p>\n                    \n                        {/* Log-in Buttons */}\n                        <div className=\"c-start__buttons u-position-relative\">\n                            <GoogleLogin\n                                clientId={googleClientId}\n                                buttonText=\"Zaloguj z Google\"\n                                onSuccess={reportSuccess}\n                                onFailure={reportError}\n                                cookiePolicy={'single_host_origin'}\n                                isSignedIn={true}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Start\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { getUsername, API_DOMAIN } from \"./helpers\";\nimport Chart from \"chart.js\";\n\n\nclass LifeGraph extends Component {\n  chartRef = React.createRef();\n\n  state = {\n    data: null\n  }\n\n  getGraphData = () => {\n    axios.get(`${API_DOMAIN}/Survey/UserResponse`, {\n      params: {\n        surveyName: \"Life_Circle\",\n        userName: getUsername()\n      }\n    })\n      .then((response) => {\n        console.log(\"pobrano dane grafu.\", response);\n        let dataset = response.data.userResponseQuestionAndAnswerViewModels;\n        let data = [];\n\n        for (let i = 0; i < dataset.length; i=i+3) {\n          let temp = parseInt(dataset[i].answerText) + parseInt(dataset[i+1].answerText) + parseInt(dataset[i+2].answerText);\n          temp = temp/3;\n          temp = parseFloat(temp.toFixed(2))\n          data = [...data, temp];\n        }\n        this.setState({data: data});\n      })\n      .catch((error) => {\n        console.error(\"Błąd pobierania danych grafu.\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.getGraphData();\n\n    setTimeout(() => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n      Chart.Legend.prototype.afterFit = function () {\n        this.height = this.height + 30;\n      };\n\n      new Chart(myChartRef, {\n        type: 'polarArea',\n        data: {\n          labels: ['Rozwój osobisty', 'Kariera', 'Finanse', 'Otoczenie', 'Partner', 'Rodzina', 'Wypoczynek', 'Zdrowie'],\n          datasets: [{\n            data: this.state.data,\n            backgroundColor: ['rgba(255,61,0 ,1)', 'rgba(255,171,0 ,1)', 'rgba(174,234,0 ,1)', 'rgba(0,200,83 ,1)', 'rgba(0,184,212 ,1)', 'rgba(41,98,255 ,1)', 'rgba(98,0,234 ,1)', 'rgba(213,0,0 ,1)']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scale: {\n            angleLines: {\n              display: false\n            },\n            ticks: {\n              min: 0,\n              max: 5,\n              precision: 0,\n              z: 1,\n              display: false,\n            },\n            gridLines: {\n              drawOnChartArea: true,\n              lineWidth: 2,\n            },\n          },\n          legend: {\n            display: true,\n            labels: {\n              fontColor: 'black'\n            }\n          },\n          tooltips: {\n            enabled: true\n          },\n          animation: {\n            tension: {\n              duration: 1000,\n              easing: 'easeOutCubic',\n              from: 1,\n              to: 0,\n              loop: true\n            }\n          },\n        }\n      });\n    }, 650);\n  }\n  render() {\n    return (\n      <div className=\"c-chart--life-graph\">\n        <canvas width=\"350\" height=\"400\"\n          id=\"myChart\"\n          ref={this.chartRef}\n        />\n      </div>\n    )\n  }\n}\n\nexport default LifeGraph;","import React, { Component } from 'react'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from '@material-ui/core/Box';\n\nexport class FormSurvey extends Component {\n\n    handleChange = (event) => {\n        // Add value to survey state\n        this.props.action(this.props.question, event.target.value);\n        this.setState({done: 1});\n\n        setTimeout(() => {\n            // Go to next step or send survey and close form popup\n            if (this.props.stepindex < (this.props.lastindex -1)) {\n                document.querySelectorAll('.multi-step-nav button')[1].click();\n            } else {\n                this.props.submitForm();\n            }\n        }, 300);\n    };\n\n    render() {\n        return (\n            <Box m=\"auto\" className=\"survey-content\">\n                <Box className=\"survey-header\" height={'100px'}><h3>{this.props.question}</h3></Box>\n                <FormControl component=\"fieldset\">\n                    <Box className=\"survey-header\" mb={2}>Odpowiedz według podanej skali</Box>\n                    <RadioGroup className=\"survey-header\" onChange={this.handleChange} row>\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" labelPlacement=\"top\" />\n                        <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" labelPlacement=\"top\" />\n                    </RadioGroup>\n                </FormControl>\n            </Box>\n        )\n    }\n}\n\nexport default FormSurvey\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport FormSurvey from './FormSurvey';\nimport MultiSteps from \"multi-step-form-ui\";\nimport { getUsername, API_DOMAIN } from \"./helpers\";\n\nexport class Survey extends Component {\n  state = {\n    survey: [\n      // Rozwój osobisty\n      {\n        questionID: 1,\n        question: `Czy masz plan na siebie?`,\n      },\n      {\n        questionID: 2,\n        question: `Czy inwestujesz w swój rozwój?`,\n      },\n      {\n        questionID: 3,\n        question: `Czy regularnie czytasz książki?`,\n      },\n\n      // Kariera\n      {\n        questionID: 4,\n        question: `Czy obecna praca daje Ci satysfakcję?`,\n      },\n      {\n        questionID: 5,\n        question: `Czy lubisz swoją pracę?`,\n      },\n      {\n        questionID: 6,\n        question: `Czy praca pozwala Ci się rozwijać?`,\n      },\n\n      // Finanse\n      {\n        questionID: 7,\n        question: `Czy jesteś zadowolony z poziomu dochodu?`,\n      },\n      {\n        questionID: 8,\n        question: `Czy masz zabezpieczenie finansowe na kilka miesięcy bez pracy?`,\n      },\n      {\n        questionID: 9,\n        question: `Czy wystarcza Ci na życie i podstawowe rzeczy?`,\n      },\n\n      // Otoczenie\n      {\n        questionID: 10,\n        question: `Czy jesteś zadowolony z miejsca zamieszkania, stanu mieszkania?`,\n      },\n      {\n        questionID: 11,\n        question: `Czy lubisz swoje otoczenie?`,\n      },\n      {\n        questionID: 12,\n        question: `Czy otoczenie zapewnia Ci poczucie bezpieczeństwa?`,\n      },\n\n      // Partner, małżonek\n      {\n        questionID: 13,\n        question: `Czy jesteś szczęśliwy w obecnym związku?`,\n      },\n      {\n        questionID: 14,\n        question: `Czy partner jest dla Ciebie wsparciem?`,\n      },\n      {\n        questionID: 15,\n        question: `Czy ufacie sobie?`,\n      },\n\n      // Rodzina i przyjaciele\n      {\n        questionID: 16,\n        question: `Czy masz zaufane grono przyjaciół?`,\n      },\n      {\n        questionID: 17,\n        question: `Czy możesz polegać na rodzinnie i przyjaciołach?`,\n      },\n      {\n        questionID: 18,\n        question: `Czy lubisz spędzać czas z rodziną?`,\n      },\n\n      // Wypoczynek i rozrywka\n      {\n        questionID: 19,\n        question: `Czy masz czas na swoje hobby i zainteresowania?`,\n      },\n      {\n        questionID: 20,\n        question: `Czy budzisz się wypoczęty?`,\n      },\n      {\n        questionID: 21,\n        question: `Czy wychodzisz z domu i odpoczywasz np. w parku, lesie?`,\n      },\n\n      // Zdrowie i sprawność fiz\n      {\n        questionID: 22,\n        question: `Czy masz jakieś dolegliwości, choroby przewlekłe?`,\n      },\n      {\n        questionID: 23,\n        question: `Czy robisz profilaktyczne badania?`,\n      },\n      {\n        questionID: 24,\n        question: `Czy uprawiasz sport, ćwiczenia fizyczne, regularnie?`,\n      },\n    ],\n    answers: []\n  }\n\n  removeSurvey = () => {\n    const surContent = document.querySelector(\".survey-content\");\n    const survey = document.querySelector(\"#survey\");\n    surContent.classList.add('fading-out');\n    survey.classList.add('fading-out');\n    setTimeout(()=>{\n      surContent.remove();\n      survey.remove();\n      window.location.reload();\n    }, 500);\n  }\n\n  submitForm = () => {\n    axios.post(`${API_DOMAIN}/Survey/UserResponse`, {\n      surveyName: \"Life_Circle\",\n      userName: getUsername(),\n      userResponseQuestionAndAnswerViewModels: this.state.answers\n    },\n      {\n        'Content-Type': 'application/json'\n      })\n      .then((response) => {\n          console.info(\"Wysłano ankietę. Następuje zamknięcie ankiety.\");\n          this.removeSurvey();\n      })\n      .catch((error) => {\n        console.error(\"Błąd wysyłki ankiety.\", error);\n      });\n  }\n\n  handleChange = (question, answer) => {\n    this.setState({\n      answers: [...this.state.answers, {\n        questionText: question,\n        answerText: answer\n      }]\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"survey\" className=\"overlay\">\n        <MultiSteps>\n          {(() => {\n            const steps = [];\n\n            for (let i = 0; i < this.state.survey.length; i++) {\n              steps.push(\n                <FormSurvey \n                  key={this.state.survey[i].questionID}\n                  question={this.state.survey[i].question}\n                  action={this.handleChange}\n                  lastindex={this.state.survey.length}\n                  submitForm={this.submitForm}\n                />);\n            }\n\n            return steps;\n          })()}\n        </MultiSteps>\n      </div>\n    )\n  }\n}\n\nexport default Survey\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport LifeGraph from './lifeChart';\nimport { GoogleLogout } from 'react-google-login';\nimport { googleClientId, reportLogout, user, registerUser, getUsername, API_DOMAIN } from './helpers';\nimport { Survey } from \"./Survey\";\n\n\nclass Dashboard extends Component {\n\n  state = {\n    user: user,\n    BE: null,\n    displaySurvey: null,\n    displayGraph: null\n  }\n\n  // Check if user exist in backend\n  getUserData = () => {\n    let username = getUsername();\n\n    axios.get(`${API_DOMAIN}/User`, {\n      params: {\n        userName: username\n      }\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('Zalogowano. Pobieramy dane użytkownika:', response);\n          this.setState({ BE: response.data });\n          if (!response.data.isLifeCircleFilled) {\n            this.displaySurvey();\n          }\n          if (response.data.isLifeCircleFilled) {\n            this.initLifeCircle();\n          }\n        } else {\n          console.error('Brak danych użytkownika w systemie.');\n          console.log('Następuje próba rejestracji użytkownika do systemu.');\n          this.registerUser();\n        }\n      })\n      .catch((error) => {\n        console.error('Brak danych użytkownika w systemie.', error);\n        console.log('Następuje próba rejestracji użytkownika do systemu.');\n        this.registerUser();\n      });\n  }\n\n  // Sends Google data to backend\n  registerUser = () => {\n    let userName = getUsername();\n    let userEmail = user.profileObj.email;\n\n    axios.post(`${API_DOMAIN}/User`,\n      {\n        userName: userName,\n        email: userEmail\n      },\n      {\n        'Content-Type': 'application/json'\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('Zarejestrowano nowego użytkownika.', response);\n          this.getUserData();\n          this.displaySurvey();\n        }\n      })\n      .catch((error) => {\n        if (error.response.status === 409) {\n          console.log('Użytkownik już istnieje w systemie i nie może być ponownie zarejestrowany.', error);\n          console.log('Następuje ponowna próba pobrania danych użytkownika.');\n          this.getUserData();\n        } else {\n          console.error('Błąd rejestracji nowego użytkownika.', error);\n          console.log('Brak dalszych wskazań do działania.');\n        }\n      });\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  initLifeCircle = () => {\n    this.setState({displayGraph: true});\n  }\n\n  displaySurvey = () => {\n    this.setState({displaySurvey: true});\n  }\n\n  render() {\n    return (\n      <section className=\"c-dashboard o-flex o-flex--wrap o-flex--space-between u-padding-none u-bg-color--6 o-flex--lock-top js-dashboard\">\n        <div className=\"u-flex-12/12 u-padding-big u-padding-horizontal-great u-text--right u-text--smallest u-bg-color--6 u-font-color--3\">\n          <a className=\"o-link u-margin-right-great\">RODO</a>\n          <a className=\"o-link u-margin-right-great\">Polityka prywatności</a>\n          <GoogleLogout\n            clientId={googleClientId}\n            buttonText=\"Wyloguj\"\n            onLogoutSuccess={reportLogout}\n            render={renderProps => (\n              <a className=\"o-link\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Wyloguj</a>\n            )}\n          >\n          </GoogleLogout>\n        </div>\n\n        <div className=\"u-flex-3/12 u-padding-horizontal-big\">\n          <div className=\"c-card u-padding-big o-flex o-flex--centered-v u-margin-bottom-big\">\n            <img className=\"c-nav__picture u-margin-right\" src={user.profileObj.imageUrl}></img>\n            <strong>{user.profileObj.name}</strong>\n          </div>\n          <div className=\"c-card c-card--info c-card--white u-padding-big o-flex o-flex o-flex--wrap\">\n            <h3 className=\"o-flex u-text--left u-margin-bottom-tiny\">Koło życia</h3>\n            <div className=\"o-flex\" style={{ margin: '30px auto' }}>\n              {this.state.displayGraph ? <LifeGraph /> : false}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"u-flex-4/12 o-flex o-flex--centered-h\">\n          <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\n            <h3 className=\"u-text--center u-margin-bottom-tiny\">Twoje życiowe cele</h3>\n            <p className=\"u-text--center u-text--smaller\">Przeglądaj je codziennie, aby pamiętać<br></br>do czego dążysz i jak to osiągnąć</p>\n            <ul className=\"c-list u-flex-12/12 u-margin-bottom-none\">\n              <li className=\"c-list__item\">Sprzedawać odzież własnej marki</li>\n              <li className=\"c-list__item\">Osiedlić się w Tajlandii</li>\n              <li className=\"c-list__item\">Władać płynnie pięcioma językami</li>\n              <li className=\"c-list__item\">Mieć tytuł mistrza szachowego</li>\n              <li className=\"c-list__item\">Zbudować dom</li>\n              <li className=\"c-list__item\">Założyć rodzinę z dwójką dzieci</li>\n              <li className=\"c-list__item\">Zwiedzić cały świat</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"u-flex-5/12 u-padding-horizontal-big\">\n          <div className=\"c-card u-padding-great o-flex o-flex--start o-flex--column\">\n            <h3 className=\"u-text--left u-margin-bottom-tiny\">Plan realizacji: Sprzedawać odzież własnej marki</h3>\n            <p className=\"u-text--left\">Twój plan to gwarancja osiągnięcia zamierzonego celu. Przemyśl realizację zgodnie z metodologią SMART, następnie wypisz wszystkie kroki i zacznij działać.</p>\n            <ul className=\"c-list u-flex-12/12 u-margin-bottom-none\">\n              <li className=\"c-list__item\">Nawiązać znajomość z projektantem odzieży</li>\n              <li className=\"c-list__item\">Nawiązać znajomość z dystrybutorem</li>\n              <li className=\"c-list__item\">Wyszukać w internecie fabryki odzieży</li>\n              <li className=\"c-list__item\">Wykonać telefon dla zorientowania w kosztach produkcji</li>\n              <li className=\"c-list__item\">Kolejny krok</li>\n              <li className=\"c-list__item\">Kolejny krok</li>\n            </ul>\n          </div>\n        </div>\n\n        {this.state.displaySurvey ? <Survey /> : false}\n\n      </section>\n    );\n  }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { user } from './views/helpers';\nimport './scss/main.css';\n\n// views\nimport Start from './views/start';\nimport Dashboard from './views/dashboard';\n\nexport default class App extends Component {\n  state = {\n    loggedIn: 0\n  }\n\n  updateLogin = () => {\n    this.setState({ loggedIn: !this.state.loggedIn });\n  }\n\n  componentDidMount() {    \n    // Check if user cookie exist and mark user as logged or redirect to start as logged-out  \n    user && this.updateLogin();\n  }\n\n  render() {    \n    return (\n      <div className=\"App\">\n        { this.state.loggedIn ? <Dashboard /> : <Start updateLogin={this.updateLogin} /> }\n      </div> \n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}