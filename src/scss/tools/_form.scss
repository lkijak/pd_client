@mixin square-style($size: 30px) {
  width: $size;
  height: $size;
}
@mixin transition($elem: all, $type: linear, $time: 0.2s) {
  transition: $elem $type $time;
}
@mixin absolutePseudoContent() {
  content: '';
  display: block;
  position: absolute;
}
@mixin absPosition100() {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
@mixin formInput() {
  display: inline-block;
  vertical-align: middle;
  width: 100%;
  font: inherit;
  outline: none;
  border: $global-border solid color-var(border);
  color: color-var(font);
  background: color-var(bg);
  transition: $global-transition;
  font-size: $inuit-font-size-h4;
  border-radius: $global-radius-input;
  font-weight: $global-strong-font-weight;
  box-shadow: $global-shadow !important;
  padding: $inuit-global-spacing-unit-small $inuit-global-spacing-unit;
  appearance: none;

  @include placeholder() {
    color: color-var(font, 6);
    font-weight: 400;
  }

  &:focus,
  &:active {
    border-color: color-var(border, 2);
  }

  &--error {
    border-width: 3px;
    border-color: color-var(error);
  }

  &--disabled {
    pointer-events: none !important;
    color: color-var(font, 6) !important;
    background-color: color-var(bg, 5) !important;
    border-color: color-var(bg, 5) !important;

    &:focus,
    &:active {
      border-color: color-var(bg, 5) !important;
    }
  }
}
@mixin clickableInput() {
  $self: &;
  cursor: pointer;
  position: relative;
  padding-left: $inuit-global-spacing-unit-great;
  margin-top: $inuit-global-spacing-unit !important;
  margin-bottom: $inuit-global-spacing-unit !important;

  &__replacement {
    display: inline-block;
    @include square-style($inuit-global-spacing-unit-large);
    border: 1px solid color-var(border);
    vertical-align: middle;
    margin-right: $inuit-global-spacing-unit-small;
    // @include transition();
    box-shadow: $global-shadow;
    position: absolute;
    top: 0;
    left: 0;
    background: color-var(bg);

    &:before {
      content: '';
      display: block;
      position: absolute;
    }
  }

  &--disabled {
    pointer-events: none;
    background: color-var(bg, 5);
    border-color: color-var(bg, 5);
  }

  &:hover {
    #{$self}__replacement {
      border-color: color-var(font);
    }
  }

  input:checked {
    & + #{$self}__replacement {
      &:before,
      &:after {
        border: 1px solid color-var(font);
        background: color-var(font);
      }
    }

    &[type='radio'] {
      & + #{$self}__replacement {
        border-width: 2px;
        border-color: color-var(font);
      }
    }
  }
}

@mixin checkboxPart(
  $left: 3px,
  $bottom: 11px,
  $width: 8px,
  $degree: 45deg,
  $origin: bottom left
) {
  left: $left;
  bottom: $bottom;
  width: $width;
  border-radius: 2px;
  transform: rotate($degree);
  transform-origin: $origin;
}
@mixin tick($colored: false) {
  &:before,
  &:after {
    @include absolutePseudoContent();
    height: 4px;
  }
  @if ($colored) {
    &:before,
    &:after {
      background: color-var(border, 2);
    }
  }
}
@mixin checkboxTick($colored: false) {
  @include tick($colored);

  &:before {
    @include checkboxPart();
  }

  &:after {
    @include checkboxPart(7px, 3px, 15px, -45deg, top left);
  }
}
@mixin arrowTick($colored: false) {
  @include tick($colored);

  &:before {
    @include checkboxPart(calc(100% - 20px), 24px, 10px, 45deg, top left);
  }

  &:after {
    @include checkboxPart(calc(100% - 14px), 17px, 10px, -45deg, top left);
  }
}
